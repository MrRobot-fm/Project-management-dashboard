name: Cypress

on:
  workflow_call:
    secrets:
      API_PORT:
        required: true
      DATABASE_URL:
        required: true
      DIRECT_URL:
        required: true
      NEXT_PUBLIC_API_BASE_URL:
        required: true

jobs:
  cypress:
    name: Cypress E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install all workspace dependencies
        run: pnpm install --recursive

      - name: Install Cypress binary
        run: pnpm exec cypress install
        working-directory: apps/web

      - name: Configure API environment
        run: |
          echo "PORT=${{ secrets.API_PORT }}" > apps/api/.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> apps/api/.env
          echo "DIRECT_URL=${{ secrets.DIRECT_URL }}" >> apps/api/.env
          echo "NODE_ENV=test" >> apps/api/.env

      - name: Configure Next.js environment
        run: |
          echo "NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }}" > apps/web/.env.local

      - name: Generate Prisma Client
        run: pnpm turbo db:generate
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres

      - name: Build API for E2E tests
        run: pnpm build --filter api

      - name: Start API server
        run: |
          cd apps/api
          pnpm start > ../../api.log 2>&1 &
          echo "API_PID=$!" >> $GITHUB_ENV
          echo "Waiting for API to be ready..."
          sleep 5

      - name: Wait for API to be ready
        run: |
          npx wait-on http://localhost:${{ secrets.API_PORT }}/api/status || exit 1

      - name: Start Next.js app
        run: |
          cd apps/web
          pnpm build
          pnpm start > ../../web.log 2>&1 &
          echo "WEB_PID=$!" >> $GITHUB_ENV
          echo "Waiting for web app to be ready..."
          sleep 10

      - name: Wait for Next.js to be ready
        run: |
          npx wait-on http://localhost:3000 || exit 1

      - name: Run Cypress E2E tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./apps/web
          browser: chrome
          headed: false
          install: true
          config: baseUrl=http://localhost:3000

      - name: Upload Cypress screenshots if failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: apps/web/cypress/screenshots

      - name: Upload Cypress videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: apps/web/cypress/videos

      - name: Stop servers
        if: always()
        run: |
          kill $API_PID || true
          kill $WEB_PID || true
