name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint the code
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run Linting with Turborepo
        run: pnpm turbo run lint

  build:
    name: Build Project
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma Client
        run: pnpm turbo db:generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}

      - name: Configure API environment
        run: |
          echo "PORT=${{ secrets.API_PORT }}" > apps/api/.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> apps/api/.env
          echo "DIRECT_URL=${{ secrets.DIRECT_URL }}" >> apps/api/.env
          echo "NODE_ENV=production" >> apps/api/.env

      - name: Configure Next.js environment
        run: |
          echo "NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }}" > apps/web/.env.local

      - name: Build API
        run: pnpm build --filter api

      - name: Start API server in production mode
        run: |
          cd apps/api
          pnpm start > ../../api.log 2>&1 &
          echo "API_PID=$!" >> $GITHUB_ENV
          echo "Waiting for API to be ready..."
          sleep 5

      - name: Wait for API to be ready
        run: |
          npx wait-on http://localhost:${{ secrets.API_PORT }}/api/status
          if [ $? -ne 0 ]; then
            echo "API did not start in time"
            exit 1
          fi

      - name: Build frontend with Turborepo
        run: pnpm turbo run build
        env:
          NEXT_PUBLIC_API_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_BASE_URL }}

      - name: Stop API server
        if: always()
        run: kill $API_PID || true

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma Client
        run: pnpm turbo db:generate
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres

      - name: Run Tests with Turborepo
        run: pnpm turbo run test
