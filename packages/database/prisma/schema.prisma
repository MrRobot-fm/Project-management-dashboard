generator client {
  provider      = "prisma-client-js"
  output        = "../generated/client"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  ADMIN
  OWNER
  EDITOR
  COLLABORATORS
}

model User {
  id              String            @id @default(uuid())
  name            String
  email           String            @unique
  password        String
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @default(now()) @updatedAt @map("updated_at")
  ownedWorkspaces Workspace[]       @relation("ownedWorkspaces")
  workspaceMember WorkspaceMember[]

  @@map("users")
}

model Workspace {
  id        String            @id @default(uuid())
  name      String
  ownerId   String            @map("owner_id")
  createdAt DateTime          @default(now()) @map("created_at")
  updatedAt DateTime          @default(now()) @updatedAt @map("updated_at")
  owner     User              @relation("ownedWorkspaces", fields: [ownerId], references: [id])
  members   WorkspaceMember[]

  @@map("workspaces")
}

model WorkspaceMember {
  id          String    @id @default(uuid())
  userId      String    @map("user_id")
  workspaceId String    @map("workspace_id")
  role        UserRole  @default(COLLABORATORS)
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at")
  user        User      @relation(fields: [userId], references: [id])
  workspace   Workspace @relation(fields: [workspaceId], references: [id])

  @@unique([userId, workspaceId])
  @@map("workspace_members")
}
